{"version":3,"sources":["axios/axiosConfig.js","Assets/logo.png","Pages/Components/NavBar.js","crypto/encryption.js","twoFA/twoFA.js","Pages/Components/Passwords.js","Pages/CheckerPage.js","Pages/HomePage.js","Pages/MainPage.js","crypto/credential.js","Pages/LoginPage.js","Pages/RegisterPage.js","Pages/Components/QuickGeneration.js","Pages/Components/CustomizeGeneration.js","Pages/GeneratorPage.js","Pages/NotFoundPage.js","index.js"],"names":["require","config","axios","create","baseURL","process","NavBar","props","render","home","state","page","generator","checker","class","src","logo","alt","width","height","type","id","href","role","localStorage","getItem","split","onClick","logoutHandler","bind","a","method","url","data","cookie","Status","clear","this","history","push","go","email","response","replace","Component","withRouter","encrypt","stretchedMasterKeyBits","decode","btoa","unescape","encodeURIComponent","window","crypto","subtle","importKey","name","stretchedMasterKey","iv","getRandomValues","Uint8Array","tagLength","encryptedContent","encryptedBytes","encryptedPackageBuffer","encode","decrypt","encryptedData","encryptedPackage","slice","decrypted","decodeURIComponent","escape","atob","computeHOTP","secret","counter","toUpperCase","b32_regex","length","exec","formatCounter","binStr","repeat","toString","intArr","i","parseInt","from","buffer","truncate","offset","base32Decode","hash","resultKey","sign","result","computeTOTP","Math","floor","Date","now","Passwords","handleOpenInspectModal","entry","timer","setInterval","countDown","password","twoFA","showInspectModal","entryInModal","decryptedEntry","remainingSeconds","setState","handleCloseInspectModal","showPassword","clearInterval","handleShowPassword","prevState","handleUpdate2FA","handleOpenEditModal","showEditModal","handleSaveAndCloseEditModal","boxid","boxname","username","entries","map","includes","refresh","handleCloseEditModal","handleDelete","uuidv4","Modal","show","onHide","Header","Title","Body","onSubmit","e","preventDefault","for","onChange","target","value","navigator","clipboard","writeText","Footer","Button","variant","readOnly","sha1","pwnd_dict","checkBreach","item","createDictionary","pwnd_pair","digestEnd","decryptedPassword","digest","digestFront","get","res","forEach","Object","keys","CheckerPage","pressed","breached","Change","event","getBreach","then","p","o","values","HomePage","useHistory","useState","boxes","setBoxes","searchResults","setSearchResults","textInput","setTextInput","forceUpdate","setForceUpdate","retrieveBoxesIndex","searchHandler","results","box","useEffect","placeholder","MainPage","title","genCredential","encoder","TextEncoder","password_byte","salt_byte","password_key","deriveKey","salt","iterations","masterKey","exportKey","masterKey_bytes","masterKey_for_stretch","masterKey_for_hash","deriveBits","info","stretched_key","masterPasswordHash","Promise","all","LoginPage","setEmail","setPassword","setShowPassword","loginUser","credential","mph","Email","resData","resStatus","Boolean","resCookie","setItem","location","alert","onKeyPress","key","RegisterPage","registerUser","QuickGeneration","handleCopy","generate","numbers","symbols","strict","CustomizeGeneration","p_length","p_numbers","p_symbols","p_uppercase","p_strict","handleInputChange","checked","min","max","uppercase","GeneratorPage","generatorContent","NotFoundPage","App","path","exact","component","ReactDom","document","getElementById"],"mappings":"wjBACAA,EAAQ,KAAUC,SAEHC,UAAMC,OAAO,CAC1BC,QAASC,mC,QCJI,MAA0B,iC,gBCMnCC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA6CRC,OAAS,WACP,IAAIC,EAA2B,aAApB,EAAKC,MAAMC,KAAsB,kBAAoB,WAC5DC,EACkB,kBAApB,EAAKF,MAAMC,KAA2B,kBAAoB,WACxDE,EACkB,gBAApB,EAAKH,MAAMC,KAAyB,kBAAoB,WAE1D,OACE,qBAAKG,MAAM,gDAAX,SACE,sBAAKA,MAAM,kBAAX,UACE,sBAAKA,MAAM,eAAX,UACE,qBACEC,IAAKC,EACLC,IAAI,GACJC,MAAM,KACNC,OAAO,KACPL,MAAM,kCAEP,cAEH,wBACEA,MAAM,iBACNM,KAAK,SACL,iBAAe,WACf,iBAAe,aACf,gBAAc,YACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMN,MAAM,0BAEd,qBAAKA,MAAM,2BAA2BO,GAAG,YAAzC,SACE,qBAAIP,MAAM,aAAV,UACE,oBAAIA,MAAM,WAAV,SACE,mBAAGA,MAAOL,EAAM,eAAa,OAAOa,KAAK,QAAzC,oBAIF,oBAAIR,MAAM,WAAV,SACE,mBAAGA,MAAOF,EAAWU,KAAK,aAA1B,yBAIF,oBAAIR,MAAM,WAAV,SACE,mBAAGA,MAAOD,EAASS,KAAK,WAAxB,+BAIF,qBAAIR,MAAM,oBAAV,UACE,mBACEA,MAAM,2BACNQ,KAAK,KACLD,GAAG,iBACHE,KAAK,SACL,iBAAe,WACf,gBAAc,QANhB,qBAUA,qBAAIT,MAAM,gBAAV,UACE,6BACE,mBAAGA,MAAM,gBAAT,SACqC,OAAlCU,aAAaC,QAAQ,SAClB,GACAD,aAAaC,QAAQ,SAASC,MAAM,KAAK,OAGjD,6BACE,oBAAIZ,MAAM,uBAEZ,6BACE,wBACEA,MAAM,gBACNa,QAAS,WACP,EAAKC,iBAHT,wCAnHhB,EAAKlB,MAAQ,CACXC,KAAMJ,EAAMI,KACZiB,cAAerB,EAAMqB,eAGvB,EAAKA,cAAgB,EAAKA,cAAcC,KAAnB,gBAPJ,E,wFAUnB,sBAAAC,EAAA,sEACyB5B,EAAM,CAC3B6B,OAAQ,OACRC,IAAK,UACLC,KAAM,CACJC,OAAQV,aAAaC,QAAQ,aALnC,QAQ+B,IAR/B,OAQeQ,KAAKE,SAChBX,aAAaY,QACbC,KAAK9B,MAAM+B,QAAQC,KAAK,KACxBF,KAAK9B,MAAM+B,QAAQE,MAXvB,gD,4HAeA,4BAAAV,EAAA,sEACyB5B,EAAM,CAC3B6B,OAAQ,OACRC,IAAK,eACLC,KAAM,CACJC,OAAQV,aAAaC,QAAQ,UAC7BgB,MAAOjB,aAAaC,QAAQ,YANlC,OACQiB,EADR,OAWMlB,aAAaC,QAAQ,WACrBD,aAAaC,QAAQ,wBACI,IAAzBiB,EAAST,KAAKE,SAGhBX,aAAaY,QACbC,KAAK9B,MAAM+B,QAAQK,QAAQ,WAjB/B,gD,2DA1BmBC,aAyINC,cAAWvC,G,kDC3IpBwC,EAAO,uCAAG,WAAOb,EAAMc,GAAb,uBAAAjB,EAAA,6DACdG,EAAOe,YAAOC,KAAKC,SAASC,mBAAmBlB,MADjC,SAEmBmB,OAAOC,OAAOC,OAAOC,UACpD,MACAP,YAAOD,GACP,CAAES,KAAM,YACR,EACA,CAAC,YAPW,cAERC,EAFQ,OASRC,EAAKL,OAAOM,gBAAgB,IAAIC,WAXtB,KAEF,SAUiBR,OAAOC,OAAOC,OAAOR,QAClD,CACEU,KAAM,UAKNE,GAAIA,EAMJG,UAAW,KAEbJ,EACAxB,GA1BY,cAUR6B,EAVQ,OA4BRC,EAAiB,IAAIH,WAAWE,GAChCE,EAAyB,IAAIJ,WAAJ,sBAAmBF,GAAnB,YAA0BK,KA7B3C,kBA+BPE,YAAOD,IA/BA,4CAAH,wDAkCPE,EAAO,uCAAG,WAAOC,EAAepB,GAAtB,uBAAAjB,EAAA,sEACmBsB,OAAOC,OAAOC,OAAOC,UACpD,MACAP,YAAOD,GACP,CAAES,KAAM,YACR,EACA,CAAC,YANW,cACRC,EADQ,OAQRW,EAAmB,IAAIR,WAAWZ,YAAOmB,IACzCT,EAAKU,EAAiBC,MAAM,EA7ClB,IA8CVN,EAAiBK,EAAiBC,MA9CxB,IAoCF,SAWUjB,OAAOC,OAAOC,OAAOY,QAC3C,CACEV,KAAM,UACNE,GAAIA,EAEJG,UAAW,KAEbJ,EACAM,GAnBY,cAWRO,EAXQ,yBAqBPC,mBAAmBC,OAAOC,KAAKR,YAAOK,OArB/B,4CAAH,wD,kBC5BPI,EAAW,uCAAG,WAAOC,EAAQC,GAAf,uBAAA9C,EAAA,yDAClB6C,EAASA,EAAOE,cAAclC,QAAQ,MAAO,IACvCmC,EAAY,cACM,IAAlBH,EAAOI,QAAgBD,EAAUE,KAAKL,GAH1B,yCAG2C,OAH3C,cAKdM,EAAgB,SAACL,GAInB,IAHA,IAAIM,GAAU,IAAIC,OAAO,IAAMP,EAAQQ,SAAS,IAAIf,OAAO,IACvDgB,EAAS,GAEJC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAOC,GAAKC,SAASL,EAAOb,MAAU,EAAJiB,EAAW,EAAJA,EAAQ,GAAI,GAGvD,OAAO1B,WAAW4B,KAAKH,GAAQI,QAI7BC,EAAW,SAACD,GACd,IAAIE,EAAqC,GAA5BF,EAAOA,EAAOV,OAAS,GACpC,OACqB,IAAjBU,EAAOE,KAAmB,IACL,IAArBF,EAAOE,EAAS,KAAc,IACT,IAArBF,EAAOE,EAAS,KAAc,EACV,IAArBF,EAAOE,EAAS,IAvBH,SA2BMtC,OAAOC,OAAOC,UACpC,MACAqC,IAAajB,EAAQ,WACrB,CAAEnB,KAAM,OAAQqC,KAAM,CAAErC,KAAM,WAC9B,EACA,CAAC,SAhCe,cA2BZsC,EA3BY,iBAkCGzC,OAAOC,OAAOyC,KACjC,OACAD,EACAb,EAAcL,IArCE,eAkCZoB,EAlCY,0BAuCV,SAAYN,EAAS,IAAI9B,WAAWoC,IAAxB,SAAmC,GAAM,IAAI3B,OAAO,IAvCtD,4CAAH,wDA0CX4B,EAAc,SAACtB,GACnB,IAAMC,EAAUsB,KAAKC,MAAMC,KAAKC,MAAQ,KACxC,OAAO3B,EAAYC,EAAQC,IC5CR0B,E,kDACnB,WAAY/F,GAAQ,IAAD,8BACjB,cAAMA,IAoCRgG,uBArCmB,uCAqCM,WAAOC,GAAP,SAAA1E,EAAA,6DACvB,EAAK2E,MAAQC,aAAY,WACvB,EAAKC,cACJ,KAHoB,oCAShBH,GATgB,iBAUHtC,EACdsC,EAAMI,SACNpF,aAAaC,QAAQ,uBAZJ,+BAcNwE,EAdM,UAeX/B,EAAQsC,EAAMK,MAAOrF,aAAaC,QAAQ,uBAf/B,qFAUnBmF,SAVmB,KAcnBC,MAdmB,mEAmBhBL,GAnBgB,mBAoBHtC,EACdsC,EAAMI,SACNpF,aAAaC,QAAQ,uBAtBJ,sCAwBNyC,EACXsC,EAAMK,MACNrF,aAAaC,QAAQ,uBA1BJ,4BAoBnBmF,SApBmB,MAwBnBC,MAxBmB,gDA6BHX,KAAKC,OACpBC,KAAKC,MAAyC,IAAjCH,KAAKC,MAAMC,KAAKC,MAAQ,MAAkB,KA9BrC,OAMrBS,kBAAkB,EAElBC,aARqB,KAkBrBC,eAlBqB,MA6BrBC,iBA7BqB,YAKlBC,SALkB,6DArCN,wDAwEnBC,wBAA0B,WACxB,EAAKD,SAAS,CAAEH,aAAc,KAC9B,EAAKG,SAAS,CAAEJ,kBAAkB,IAClC,EAAKI,SAAS,CAAEE,cAAc,IAC9B,EAAKF,SAAS,CAAEF,eAAgB,KAChC,EAAKE,SAAS,CAAED,iBAAkB,IAClCI,cAAc,EAAKZ,QA9EF,EAiFnBa,mBAAqB,SAACC,GACpB,EAAKL,SAAS,CAAEE,cAAe,EAAK1G,MAAM0G,gBAlFzB,EAqFnBI,gBArFmB,sBAqFD,sBAAA1F,EAAA,iGAGT,EAAKpB,MAAMqG,cAHF,iBAICd,EAAY,EAAKvF,MAAMsG,eAAeH,OAJvC,yBAIZA,MAJY,0CAEdE,aAFc,WACXG,SADW,4DArFC,EA8FnBO,oBA9FmB,uCA8FG,WAAOjB,GAAP,SAAA1E,EAAA,6FAKb0E,GALa,UAOd,aAAcA,GAPA,iCAQJtC,EACJsC,EAAMI,SACNpF,aAAaC,QAAQ,uBAVb,gDAYV,GAZU,uBAcd,UAAW+E,GAdG,kCAeJtC,EACJsC,EAAMK,MACNrF,aAAaC,QAAQ,uBAjBb,iDAmBV,GAnBU,wBAMhBmF,SANgB,KAahBC,MAbgB,2CAElBa,eAAe,EAEfX,aAJkB,WACfG,SADe,6DA9FH,wDAsHnBS,4BAtHmB,sBAsHW,8BAAA7F,EAAA,6DACxBY,EAAW,KADa,KAGlBlB,aAAaC,QAAQ,UAHH,KAInB,EAAKf,MAAMqG,aAAaa,MAJL,KAKjB,EAAKlH,MAAMqG,aAAac,QALP,SAMb/E,EACX,EAAKpC,MAAMqG,aAAaF,MACxBrF,aAAaC,QAAQ,uBARG,+BAUhB,EAAKf,MAAMqG,aAAae,SAVR,KAWrB,EAAKpH,MAAMqG,aAAa/E,IAXH,UAYVc,EACd,EAAKpC,MAAMqG,aAAaH,SACxBpF,aAAaC,QAAQ,uBAdG,uBAEtBQ,EAFsB,CAG1BC,OAH0B,KAI1B0F,MAJ0B,KAK1BC,QAL0B,KAM1BhB,MAN0B,KAU1BiB,SAV0B,KAW1B9F,IAX0B,KAY1B4E,SAZ0B,OAkB1B,EAAKrG,MAAMwH,QACRC,KAAI,SAACxB,GAAD,OAAWA,EAAMoB,SACrBK,SAAS,EAAKvH,MAAMqG,aAAaa,OApBV,kCAuBT1H,EAAM,CACrB6B,OAAQ,OACRC,IAAK,aACLC,KAAMA,IA1BkB,QAuB1BS,EAvB0B,gDA8BTxC,EAAM,CACrB6B,OAAQ,OACRC,IAAK,UACLC,KAAMA,IAjCkB,QA8B1BS,EA9B0B,gBAoCC,IAAzBA,EAAST,KAAKE,QAChB,EAAKzB,MAAMwH,UAEb,EAAKhB,SAAS,CAAEH,aAAc,KAC9B,EAAKG,SAAS,CAAEQ,eAAe,IAC/B,EAAKR,SAAS,CAAEE,cAAc,IAzCF,4CAtHX,EAkKnBe,qBAAuB,WACrB,EAAKjB,SAAS,CAAEH,aAAc,KAC9B,EAAKG,SAAS,CAAEQ,eAAe,IAC/B,EAAKR,SAAS,CAAEE,cAAc,KArKb,EAwKnBgB,aAxKmB,uCAwKJ,WAAOR,GAAP,SAAA9F,EAAA,sEACU5B,EAAM,CAC3B6B,OAAQ,OACRC,IAAK,aACLC,KAAM,CACJC,OAAQV,aAAaC,QAAQ,UAC7BmG,MAAOA,KANE,QASgB,IAThB,OASA3F,KAAKE,QAAiB,EAAKzB,MAAMwH,UATjC,2CAxKI,wDAoLnB1H,OAAS,WACP,OACE,sBAAKM,MAAM,kBAAX,UACE,qBAAKA,MAAM,SAAX,SACE,wBACEA,MAAM,uBACNa,QAAO,sBAAE,4BAAAG,EAAA,6DACD0E,EAAQ,IACRoB,MAAQS,cAFP,SAGD,EAAKZ,oBAAoBjB,GAHxB,2CAFX,kCAWF,oBAAI1F,MAAM,sCAAV,SACG,EAAKJ,MAAMqH,QAAQC,KAAI,SAACxB,GACvB,OACE,qBAAK1F,MAAM,wBAAX,SACE,sBAAKA,MAAM,gCAAX,UACE,qBAAKA,MAAM,8BAAX,SACE,sBAAKA,MAAM,YAAYS,KAAK,QAA5B,UACE,wBACET,MAAM,oBACNa,QAAO,sBAAE,sBAAAG,EAAA,sEACD,EAAKyE,uBAAuBC,GAD3B,2CAFX,qBAQA,wBACE1F,MAAM,0BACNa,QAAS,WACP,EAAK8F,oBAAoBjB,IAH7B,yBAUJ,qBAAK1F,MAAM,+BAAX,SACE,sBAAKA,MAAM,MAAX,UACE,qBAAKA,MAAM,SAAX,SACE,sBAAKA,MAAM,MAAX,UACE,qBAAKA,MAAM,QAAX,SACE,qBAAKA,MAAM,UAAX,SAAsB0F,EAAMqB,YAE9B,qBAAK/G,MAAM,QAAX,SAAoB0F,EAAMxE,WAG9B,qBAAKlB,MAAM,QAAX,SACE,wBACEM,KAAK,SACLN,MAAM,yBACNa,QAAS,WACP,EAAKyG,aAAa5B,EAAMoB,QAJ5B,qCAiBhB,eAACU,EAAA,EAAD,CACEC,KAAM,EAAK7H,MAAMgH,cACjBc,OAAQ,EAAKL,qBAFf,UAIE,cAACG,EAAA,EAAMG,OAAP,UACE,cAACH,EAAA,EAAMI,MAAP,2BAEF,cAACJ,EAAA,EAAMK,KAAP,UACE,uBACEC,SAAU,SAACC,GACTA,EAAEC,kBAFN,UAKE,sBAAKhI,MAAM,aAAX,UACE,uBAAOiI,IAAI,iBAAiBjI,MAAM,iBAAlC,0BAGA,sBAAKA,MAAM,mBAAX,UACE,uBACEM,KAAK,OACLN,MAAM,eACNO,GAAG,iBACH2H,SAAU,SAACH,GACT,EAAK3B,SAAS,CACZH,aAAa,2BACR,EAAKrG,MAAMqG,cADJ,IAEVc,QAASgB,EAAEI,OAAOC,WAIxBA,MAAO,EAAKxI,MAAMqG,aAAac,UAEjC,wBACE/G,MAAM,0BACNa,QAAS,WACPwH,UAAUC,UAAUC,UAClB,EAAK3I,MAAMqG,aAAac,UAJ9B,wBAYJ,sBAAK/G,MAAM,aAAX,UACE,uBAAOiI,IAAI,iBAAiBjI,MAAM,iBAAlC,iBAGA,sBAAKA,MAAM,mBAAX,UACE,uBACEM,KAAK,OACLN,MAAM,eACNO,GAAG,iBACH2H,SAAU,SAACH,GACT,EAAK3B,SAAS,CACZH,aAAa,2BACR,EAAKrG,MAAMqG,cADJ,IAEV/E,IAAK6G,EAAEI,OAAOC,WAIpBA,MAAO,EAAKxI,MAAMqG,aAAa/E,MAEjC,wBACElB,MAAM,0BACNa,QAAS,WACPwH,UAAUC,UAAUC,UAClB,EAAK3I,MAAMqG,aAAa/E,MAJ9B,wBAYJ,sBAAKlB,MAAM,aAAX,UACE,uBAAOiI,IAAI,iBAAiBjI,MAAM,iBAAlC,sBAGA,sBAAKA,MAAM,mBAAX,UACE,uBACEM,KAAK,OACLN,MAAM,eACNO,GAAG,iBACH2H,SAAU,SAACH,GACT,EAAK3B,SAAS,CACZH,aAAa,2BACR,EAAKrG,MAAMqG,cADJ,IAEVe,SAAUe,EAAEI,OAAOC,WAIzBA,MAAO,EAAKxI,MAAMqG,aAAae,WAEjC,wBACEhH,MAAM,0BACNa,QAAS,WACPwH,UAAUC,UAAUC,UAClB,EAAK3I,MAAMqG,aAAae,WAJ9B,wBAYJ,sBAAKhH,MAAM,aAAX,UACE,uBAAOiI,IAAI,iBAAiBjI,MAAM,iBAAlC,sBAGA,sBAAKA,MAAM,mBAAX,UACE,uBACEM,KAAM,EAAKV,MAAM0G,aAAe,OAAS,WACzCtG,MAAM,eACNO,GAAG,iBACH2H,SAAU,SAACH,GACT,EAAK3B,SAAS,CACZH,aAAa,2BACR,EAAKrG,MAAMqG,cADJ,IAEVH,SAAUiC,EAAEI,OAAOC,WAIzBA,MAAO,EAAKxI,MAAMqG,aAAaH,SAC/BjF,QAAS,EAAK2F,qBAEhB,wBACExG,MAAM,0BACNa,QAAS,WACPwH,UAAUC,UAAUC,UAClB,EAAK3I,MAAMqG,aAAaH,WAJ9B,qBAWF,qBAAK9F,MAAM,YAAX,SACG,yBACE,EAAKJ,MAAM0G,aAAe,OAAS,QACpC,iBAGN,sBAAKtG,MAAM,aAAX,UACE,uBAAOiI,IAAI,iBAAiBjI,MAAM,iBAAlC,2CAGA,sBAAKA,MAAM,mBAAX,UACE,uBACEM,KAAK,OACLN,MAAM,eACNO,GAAG,iBACH2H,SAAU,SAACH,GACT,EAAK3B,SAAS,CACZH,aAAa,2BACR,EAAKrG,MAAMqG,cADJ,IAEVF,MAAOgC,EAAEI,OAAOC,WAItBA,MAAO,EAAKxI,MAAMqG,aAAaF,QAEjC,wBACE/F,MAAM,0BACNa,QAAS,WACPwH,UAAUC,UAAUC,UAClB,EAAK3I,MAAMqG,aAAaF,QAJ9B,6BAcR,eAACyB,EAAA,EAAMgB,OAAP,WACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAY7H,QAAS,EAAKwG,qBAA1C,mBAGA,cAACoB,EAAA,EAAD,CACEC,QAAQ,UACR7H,QAAS,EAAKgG,4BAFhB,gCAQJ,eAACW,EAAA,EAAD,CACEC,KAAM,EAAK7H,MAAMoG,iBACjB0B,OAAQ,EAAKrB,wBAFf,UAIE,cAACmB,EAAA,EAAMG,OAAP,UACE,cAACH,EAAA,EAAMI,MAAP,8BAEF,cAACJ,EAAA,EAAMK,KAAP,UACE,uBACEC,SAAU,SAACC,GACTA,EAAEC,kBAFN,UAKE,sBAAKhI,MAAM,aAAX,UACE,uBAAOiI,IAAI,iBAAiBjI,MAAM,iBAAlC,kBAGA,sBAAKA,MAAM,mBAAX,UACE,uBACE2I,UAAQ,EACRrI,KAAK,OACLN,MAAM,eACNO,GAAG,iBACH6H,MAAO,EAAKxI,MAAMqG,aAAac,UAEjC,wBACE/G,MAAM,0BACNa,QAAS,WACPwH,UAAUC,UAAUC,UAClB,EAAK3I,MAAMqG,aAAac,UAJ9B,wBAYJ,sBAAK/G,MAAM,aAAX,UACE,uBAAOiI,IAAI,iBAAiBjI,MAAM,iBAAlC,iBAGA,sBAAKA,MAAM,mBAAX,UACE,uBACE2I,UAAQ,EACRrI,KAAK,OACLN,MAAM,eACNO,GAAG,iBACH6H,MAAO,EAAKxI,MAAMqG,aAAa/E,MAEjC,wBACElB,MAAM,0BACNa,QAAS,WACPwH,UAAUC,UAAUC,UAClB,EAAK3I,MAAMqG,aAAa/E,MAJ9B,wBAYJ,sBAAKlB,MAAM,aAAX,UACE,uBAAOiI,IAAI,iBAAiBjI,MAAM,iBAAlC,sBAGA,sBAAKA,MAAM,mBAAX,UACE,uBACE2I,UAAQ,EACRrI,KAAK,OACLN,MAAM,eACNO,GAAG,iBACH6H,MAAO,EAAKxI,MAAMqG,aAAae,WAEjC,wBACEhH,MAAM,0BACNa,QAAS,WACPwH,UAAUC,UAAUC,UAClB,EAAK3I,MAAMqG,aAAae,WAJ9B,wBAYJ,sBAAKhH,MAAM,aAAX,UACE,uBAAOiI,IAAI,iBAAiBjI,MAAM,iBAAlC,sBAGA,sBAAKA,MAAM,mBAAX,UACE,uBACE2I,UAAQ,EACRrI,KAAM,EAAKV,MAAM0G,aAAe,OAAS,WACzCtG,MAAM,eACNO,GAAG,iBACH6H,MAAO,EAAKxI,MAAMqG,aAAaH,SAC/BjF,QAAS,EAAK2F,qBAEhB,wBACExG,MAAM,0BACNa,QAAS,WACPwH,UAAUC,UAAUC,UAClB,EAAK3I,MAAMqG,aAAaH,WAJ9B,qBAWF,qBAAK9F,MAAM,YAAX,SACG,yBACE,EAAKJ,MAAM0G,aAAe,OAAS,QACpC,iBAGN,sBAAKtG,MAAM,aAAX,UACE,uBAAOiI,IAAI,iBAAiBjI,MAAM,iBAAlC,iBAGA,sBAAKA,MAAM,mBAAX,UACE,uBACE2I,UAAQ,EACRrI,KAAK,OACLN,MAAM,eACNO,GAAG,iBACH6H,MACE,EAAKxI,MAAMqG,aAAaF,MACxB,iBACC,GACCX,KAAKC,OACFC,KAAKC,MAC6B,IAAjCH,KAAKC,MAAMC,KAAKC,MAAQ,MACxB,MAEN,YAEF1E,QAAS,EAAK6F,kBAEhB,wBACE1G,MAAM,0BACNa,QAAS,WACPwH,UAAUC,UAAUC,UAClB,EAAK3I,MAAMqG,aAAaF,QAJ9B,6BAcR,cAACyB,EAAA,EAAMgB,OAAP,UACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAY7H,QAAS,EAAKwF,wBAA1C,4BA3kBR,EAAKzG,MAAQ,CACXqH,QAAS,EAAKxH,MAAMwH,QACpBjB,kBAAkB,EAClBY,eAAe,EACfX,aAAc,GACdC,eAAgB,GAChBC,iBAAkB,EAClBiB,QAAS,EAAK3H,MAAM2H,QACpBd,cAAc,GAEhB,EAAKb,uBAAyB,EAAKA,uBAAuB1E,KAA5B,gBAC9B,EAAKsF,wBAA0B,EAAKA,wBAAwBtF,KAA7B,gBAE/B,EAAK4F,oBAAsB,EAAKA,oBAAoB5F,KAAzB,gBAC3B,EAAK8F,4BACH,EAAKA,4BAA4B9F,KAAjC,gBACF,EAAKsG,qBAAuB,EAAKA,qBAAqBtG,KAA1B,gBAC5B,EAAKyF,mBAAqB,EAAKA,mBAAmBzF,KAAxB,gBAE1B,EAAK8E,UAAY,EAAKA,UAAU9E,KAAf,gBACjB,EAAK4E,MAAQ,EAtBI,E,6CAyBnB,WACE,IAAIQ,EAAmB5E,KAAK3B,MAAMuG,iBAClCA,EAAmBf,KAAKC,OACrBC,KAAKC,MAAyC,IAAjCH,KAAKC,MAAMC,KAAKC,MAAQ,MAAkB,KAE1DhE,KAAK6E,SAAS,CAAED,qBACS,IAArBA,IACF5E,KAAKmF,kBACLnF,KAAK6E,SAAS,CAAED,iBAAkB,U,GAlCDrE,aCNjC8G,EAAO1J,EAAQ,KAEjB2J,EAAY,G,4CAEhB,yBAaiBC,EAbjB,WAAA9H,EAAA,iGAAAA,EAAA,MAaE,WAA2B+H,GAA3B,cAkBaC,EAlBb,SAAAhI,EAAA,2DACM,aAAc+H,GADpB,wBAkBaC,EAlBb,SAkB8BxE,GACxB,IAAMyE,EAAYzE,EAAE5D,MAAM,KACtBqI,EAAU,KAAOC,IACnBL,EAAUE,EAAKhC,SAAWkC,EAAU,KArB5C,SAEoC7F,EAC9B2F,EAAKjD,SACLpF,aAAaC,QAAQ,uBAJ3B,cAEUwI,EAFV,OAMUC,EAASR,EAAKO,GAAmBpF,cAEjCsF,EAAcD,EAAO7F,MAAM,EAAG,GAC9B2F,EAAYE,EAAO7F,OAAO,IATpC,UAUsBnE,EAAMkK,IACtB,wCAA0CD,GAXhD,QAUUE,EAVV,OAcoBA,EAAIpI,KAAKP,MAAM,QAErB4I,QAAQR,GAhBtB,4CAbF,yBAaiBF,EAbjB,qDACyB1J,EAAM,CAC3B6B,OAAQ,OACRC,IAAK,gBACLC,KAAM,CACJC,OAAQV,aAAaC,QAAQ,aALnC,OACQiB,EADR,qBASqBA,EAAST,MAT9B,gEASa4H,EATb,kBAUUD,EAAYC,GAVtB,+IAwCmBU,OAAOC,KAAKb,GAAW5E,OAxC1C,gE,4BA2CqB0F,E,kDACnB,WAAYlK,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,CACXwI,MAAO,EACPwB,SAAS,EACTC,SAAUhB,GAGZ,EAAKiB,OAAS,EAAKA,OAAO/I,KAAZ,gBARG,E,0CAWnB,SAAOgJ,GAAQ,IAAD,Q,2CACZC,GAAYC,MAAK,WACf,EAAK7D,SAAS,CACZgC,MAAOqB,OAAOC,KAAKb,GAAW5E,OAC9B2F,SAAS,EACTC,SAAUhB,S,oBAKhB,WACE,IAAIqB,EACAC,EAAI,GAER,GAAI5I,KAAK3B,MAAMgK,QAEb,GAAyB,IAArBrI,KAAK3B,MAAMwI,MAAa,CAC1B8B,EACE,oBAAIlK,MAAM,cAAV,SACG,kBAAoBuB,KAAK3B,MAAMwI,MAAQ,cAG5C,IAAK,IAAI5D,EAAI,EAAGA,EAAIjD,KAAK3B,MAAMwI,MAAO5D,IACpC2F,EAAE1I,KACA,sBAAMzB,MAAM,kBAAZ,SACG,eACCyJ,OAAOC,KAAKnI,KAAK3B,MAAMiK,UAAUrF,GACjC,6BACAiF,OAAOW,OAAO7I,KAAK3B,MAAMiK,UAAUrF,GACnC,kBAL+B,IAAMA,SAU7C0F,EACE,oBAAIlK,MAAM,eAAV,SACG,wDAMT,OACE,sBAAKA,MAAM,kBAAX,UACE,qBAAKA,MAAM,MAAX,SACE,cAAC,EAAD,CAAQH,KAAK,kBAEf,sBAAKG,MAAM,WAAX,UACE,qBAAKA,MAAM,QAAX,SACE,sBAAKA,MAAM,aAAX,UACE,wBACEM,KAAK,SACLN,MAAM,yCACNa,QAASU,KAAKuI,OAHhB,mCAOA,mBAAG9J,MAAM,MAAT,SACE,iMAGgD,IAC9C,kDAJF,cASN,qBAAKA,MAAM,QAAX,SACE,sBAAKA,MAAM,OAAX,UACE,qBAAKA,MAAM,sBAAX,SAAkCkK,IACjCC,iB,GAlF0BrI,aCwD1BuI,EApGE,WACf,IAAM7I,EAAU8I,cAChB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAsCN,mBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAEMC,EAAkB,uCAAG,4BAAAhK,EAAA,sEACF5B,EAAM,CAC3B6B,OAAQ,OACRC,IAAK,gBACLC,KAAM,CACJC,OAAQV,aAAaC,QAAQ,aALR,OACnBiB,EADmB,OAQzB6I,EAAS7I,EAAST,MARO,2CAAH,qDAWlB8J,EAAa,uCAAG,WAAOT,GAAP,qBAAAxJ,EAAA,sDAGpB,GAFMkK,EAAU,GAES,IAArBN,EAAU3G,OACZ0G,EAAiBH,OACZ,CAAC,EAAD,YACaA,GADb,IACL,4BAEK,YAFMW,EAAc,UAEAA,EAAIpE,QAAQI,SAASyD,IACzC,aAAcO,GAAOA,EAAInE,SAASG,SAASyD,IAC3C,QAASO,GAAOA,EAAIjK,IAAIiG,SAASyD,KAElCM,EAAQzJ,KAAK0J,GAPZ,8BAULR,EAAiBO,GAEnBH,EAAeD,EAAc,GAjBT,2CAAH,sDAoCnB,OAZAM,qBAAU,WACRH,EAAcT,KACb,CAACA,IAEJY,qBAAU,WACRJ,MACC,CAACJ,IAEJQ,qBAAU,WACRJ,MACC,CAACxJ,IAGF,sBAAKxB,MAAM,kBAAX,UACE,qBAAKA,MAAM,MAAX,SACE,cAAC,EAAD,CAAQH,KAAK,eAEf,sBAAKG,MAAM,WAAX,UACE,sBAAKA,MAAM,QAAX,UACE,qBAAKA,MAAM,mBAAX,SACE,oBAAIA,MAAM,UAAV,kCAEF,qBAAKA,MAAM,iBAAX,SACE,uBAAMA,MAAM,cAAZ,UACE,uBACEA,MAAM,oBACNM,KAAK,SACL+K,YAAY,SACZjD,MAAOwC,EACP1C,SAjCS,SAACH,GACtB8C,EAAa9C,EAAEI,OAAOC,UAkCZ,wBAAQpI,MAAM,0BAA0BM,KAAK,SAA7C,yBAKJ,mBAAGN,MAAM,MAAT,SACE,6BACE,6DAC0B,kDAD1B,mDAGE,2CAHF,sCAG4D,cAKlE,qBAAKA,MAAM,QAAX,SACE,cAAC,EAAD,CACEiH,QAASyD,EACTtD,QAAS4D,GACJF,YChDFQ,MA/Cf,WACE,IAAM9J,EAAU8I,cAChB,OACE,qBAAKtK,MAAM,yBAAX,SACE,sBAAKA,MAAM,sDAAX,UACE,qBAAKA,MAAM,QAAX,SACE,qBAAKC,IAAKC,EAAMF,MAAM,mBAAmBG,IAAI,iBAE/C,sBAAKH,MAAM,oBAAX,UACE,oBAAIA,MAAM,YAAV,oBACA,mBAAGA,MAAM,KAAT,8BACA,yBAAQA,MAAM,cAAd,UACE,4BAAYA,MAAM,aAAlB,SACE,0DAEF,4BAAYA,MAAM,oBAAlB,SACE,sBAAMuL,MAAM,eAAZ,2BAGJ,sBAAKvL,MAAM,YAAYS,KAAK,QAA5B,UACE,wBACEH,KAAK,SACLN,MAAM,0BACNa,QAAS,WACPW,EAAQC,KAAK,UACbD,EAAQE,MALZ,oBAUA,wBACEpB,KAAK,SACLN,MAAM,0BACNa,QAAS,WACPW,EAAQC,KAAK,aACbD,EAAQE,MALZ,iCChCC8J,EAAa,uCAAG,WAAO7J,EAAOmE,GAAd,iCAAA9E,EAAA,6DACrByK,EAAU,IAAIC,YACdC,EAAgBF,EAAQtI,OAAO2C,GAC/B8F,EAAYH,EAAQtI,OAAOxB,GAHN,SAIAY,OAAOC,OAAOC,UACvC,MACAkJ,EACA,UACA,EACA,CAAC,cATwB,cAIrBE,EAJqB,gBAYHtJ,OAAOC,OAAOsJ,UACpC,CACEpJ,KAAM,SACNqC,KAAM,UACNgH,KAAMH,EACNI,WAAY,KAEdH,EACA,CACEnJ,KAAM,UACNuB,OAAQ,MAEV,EACA,CAAC,UAAW,YAzBa,cAYrBgI,EAZqB,iBA2BG1J,OAAOC,OAAO0J,UAAU,MAAOD,GA3BlC,eA2BrBE,EA3BqB,iBA4BS5J,OAAOC,OAAOC,UAChD,MACA0J,EACA,CACEzJ,KAAM,SAER,EACA,CAAC,eAnCwB,eA4BrB0J,EA5BqB,iBAqCM7J,OAAOC,OAAOC,UAC7C,MACA0J,EACA,CACEzJ,KAAM,WAER,EACA,CAAC,eA5CwB,eAqCrB2J,EArCqB,OA8CrB1J,EAAqBJ,OAAOC,OAC/B8J,WACC,CACE5J,KAAM,OACNqC,KAAM,UACNgH,KAAMH,EACNW,KAAMd,EAAQtI,OAAO,YAEvBiJ,EACA,KACA,GAEDnC,MAAK,SAACuC,GACL,OAAOrJ,YAAOqJ,MAEZC,EAAqBlK,OAAOC,OAC/B8J,WACC,CACE5J,KAAM,SACNqJ,KAAMJ,EACNK,WAAY,EACZjH,KAAM,CAAErC,KAAM,YAEhB2J,EACA,KAEDpC,MAAK,SAAClF,GACL,OAAO5B,YAAO4B,MAzES,kBA2EpB2H,QAAQC,IAAI,CAAChK,EAAoB8J,KA3Eb,4CAAH,wDC2IXG,MAtIf,WACE,MAA0BrC,mBAAS,IAAnC,mBAAO5I,EAAP,KAAckL,EAAd,KACA,EAAgCtC,mBAAS,IAAzC,mBAAOzE,EAAP,KAAiBgH,EAAjB,KACMtL,EAAU8I,cAChB,EAAwCC,oBAAS,GAAjD,mBAAOjE,EAAP,KAAqByG,EAArB,KAJmB,SAMJC,EANI,8EAMnB,WAAyBjD,GAAzB,2BAAA/I,EAAA,6DACE+I,EAAM/B,iBADR,SAE2BwD,EAAc7J,EAAOmE,GAFhD,cAEQmH,EAFR,OAGQtK,EAAqBsK,EAAW,GAChCC,EAAMD,EAAW,GAJzB,SAKyB7N,EAAM,CAC3B6B,OAAQ,OACRC,IAAK,SACLC,KAAM,CACJgM,MAAOxL,EACPuL,IAAKA,KAVX,OAKQtL,EALR,OAcQwL,EAAUxL,EAAST,KACnBkM,EAAYC,QAAQF,EAAQ/L,QAC5BkM,EAAYH,EAAQhM,OAC1BV,aAAa8M,QAAQ,SAAUD,GAC/B7M,aAAa8M,QAAQ,qBAAsB7K,GAC3CjC,aAAa8M,QAAQ,QAAS7L,GAC1B0L,GACF/K,OAAOmL,SAASjN,KAAO,QACvBuM,GAAgB,KAEhBD,EAAY,IACZC,GAAgB,GAChBW,MAAM,4CA1BV,6CANmB,sBAwCnB,OACE,qBAAK1N,MAAM,yBAAX,SACE,sBAAKA,MAAM,sDAAX,UACE,qBAAKA,MAAM,QAAX,SACE,qBAAKC,IAAKC,EAAMC,IAAI,OAAOH,MAAM,uBAEnC,sBAAKA,MAAM,aAAX,UACE,wCACA,qBAAKA,MAAM,WAAX,SACE,uBACE2N,WAAY,SAAC5D,GACO,UAAdA,EAAM6D,KACRZ,EAAUjD,IAGdjC,SAAU,SAACC,GACTA,EAAEC,kBAPN,UAUE,sBAAKhI,MAAM,OAAX,UACE,uBAAOiI,IAAI,qBAAqBjI,MAAM,aAAtC,mBAGA,uBACEM,KAAK,QACL4H,SAAU,SAACH,GAAD,OAAO8E,EAAS9E,EAAEI,OAAOC,QACnCpI,MAAM,eACNO,GAAG,qBACH,mBAAiB,iBAGrB,sBAAKP,MAAM,OAAX,UACE,uBAAOiI,IAAI,wBAAwBjI,MAAM,aAAzC,sBAGA,sBAAKA,MAAM,mBAAX,UACE,uBACEM,KAAMgG,EAAe,OAAS,WAC9B4B,SAAU,SAACH,GAAD,OAAO+E,EAAY/E,EAAEI,OAAOC,QACtCpI,MAAM,eACNO,GAAG,wBACH6H,MAAOtC,IAET,wBACE9F,MAAM,0BACNa,QAjDS,SAACkH,GAC1BgF,GAAiBzG,IA8CH,SAIGA,EAAe,OAAS,eAI/B,qBACEtG,MAAM,YACNS,KAAK,QACL,aAAW,yBAHb,SAKE,wBACEH,KAAK,SACLN,MAAM,0BACNa,QAASmM,EAHX,2BAWN,wBACE1M,KAAK,SACLN,MAAM,0BACNa,QAAS,WACPW,EAAQC,KAAK,aACbD,EAAQE,KACRqL,GAAgB,IANpB,qCAWA,wBACEzM,KAAK,SACLN,MAAM,0BACNa,QAAS,WACPW,EAAQC,KAAK,KACbD,EAAQE,MALZ,4BCgBKmM,MAtIf,WACE,IAAMrM,EAAU8I,cAEhB,EAA0BC,mBAAS,IAAnC,mBAAO5I,EAAP,KAAckL,EAAd,KACA,EAAgCtC,mBAAS,IAAzC,mBAAOzE,EAAP,KAAiBgH,EAAjB,KACA,EAAwCvC,oBAAS,GAAjD,mBAAOjE,EAAP,KAAqByG,EAArB,KALsB,SAOPe,EAPO,8EAOtB,WAA4B/D,GAA5B,qBAAA/I,EAAA,yDACE+I,EAAM/B,iBACQ,KAAVrG,GAA6B,KAAbmE,EAFtB,uBAGIgH,EAAY,IACZC,GAAgB,GAChBW,MAAM,wCALV,0CAQ2BlC,EAAc7J,EAAOmE,GARhD,cAQQmH,EARR,OAS6BA,EAAW,GAChCC,EAAMD,EAAW,GAVzB,UAWyB7N,EAAM,CAC3B6B,OAAQ,OACRC,IAAK,YACLC,KAAM,CACJgM,MAAOxL,EACPuL,IAAKA,KAhBX,QAWQtL,EAXR,OAoBQwL,EAAUxL,EAAST,KACPmM,QAAQF,EAAQ/L,SAGhCG,EAAQC,KAAK,UACbsL,GAAgB,KAEhBD,EAAY,IACZC,GAAgB,GAChBW,MAAM,wBA7BV,6CAPsB,sBA4CtB,OACE,qBAAK1N,MAAM,yBAAX,SACE,qBAAKA,MAAM,sDAAX,SACE,sBAAKA,MAAM,QAAX,UACE,qBAAKA,MAAM,6BAAX,SACE,qBAAKC,IAAKC,EAAMF,MAAM,gBAExB,uBACE2N,WAAY,SAAC5F,GACG,UAAVA,EAAE6F,KACJE,EAAa/F,IAGjBD,SAAU,SAACC,GACTA,EAAEC,kBAPN,UAUE,sBAAKhI,MAAM,OAAX,UACE,uBAAOiI,IAAI,qBAAqBjI,MAAM,aAAtC,mBAGA,uBACEM,KAAK,QACL4H,SAAU,SAACH,GAAD,OAAO8E,EAAS9E,EAAEI,OAAOC,QACnCpI,MAAM,eACNO,GAAG,qBACH,mBAAiB,cAEnB,qBAAKA,GAAG,YAAYP,MAAM,YAA1B,4DAIF,sBAAKA,MAAM,OAAX,UACE,uBAAOA,MAAM,aAAb,sBACA,sBAAKA,MAAM,mBAAX,UACE,uBACEM,KAAMgG,EAAe,OAAS,WAC9B4B,SAAU,SAACH,GAAD,OAAO+E,EAAY/E,EAAEI,OAAOC,QACtCpI,MAAM,eACNO,GAAG,wBACH6H,MAAOtC,IAET,wBACE9F,MAAM,0BACNa,QAhDW,SAACkH,GAC1BgF,GAAiBzG,IA6CL,SAIGA,EAAe,OAAS,eAK/B,sBAAKtG,MAAM,iCAAX,UACE,sBAAKA,MAAM,YAAYS,KAAK,QAA5B,UACE,wBACEH,KAAK,SACLN,MAAM,0BACNa,QAAS,WACPW,EAAQC,KAAK,UACbD,EAAQE,MALZ,gCAUA,wBACEpB,KAAK,SACLN,MAAM,0BACNa,QAAS,WACPW,EAAQC,KAAK,KACbD,EAAQE,KACRqL,GAAgB,IANpB,sBAYF,wBACEzM,KAAK,SACLN,MAAM,0BACNa,QAASiN,EAHX,mCC5HRhO,EAAYZ,EAAQ,KAEL6O,E,kDACnB,WAAYtO,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,CACXkG,SACE,sBAAM9F,MAAM,eAAZ,gDAGJ,EAAKgO,WAAa,EAAKA,WAAWjN,KAAhB,gBAPD,E,8CAUnB,WACEsH,UAAUC,UAAUC,UAAUhH,KAAK3B,MAAMkG,Y,oBAG3C,WAAU,IAAD,OACP,OACE,qBAAK9F,MAAM,OAAX,SACE,sBAAKA,MAAM,WAAX,UACE,sBAAKA,MAAM,cAAX,UACE,qHAEuB,OAHzB,uCAOA,wBACEM,KAAK,cACLN,MAAM,yCACNa,QAAS,kBACP,EAAKuF,SACH,CACEN,SAAUhG,EAAUmO,SAAS,CAC3BhK,OAAQ,EACRiK,SAAS,EACTC,SAAS,EACTC,QAAQ,KAGZ,EAAKJ,aAbX,SAiBE,qBAAKhO,MAAM,YAAX,SACE,oBAAIA,MAAM,gCAAV,SACGuB,KAAK3B,MAAMkG,wB,GA7CiBhE,a,QCFvChC,EAAYZ,EAAQ,KAELmP,E,kDACnB,WAAY5O,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,CACX0O,SAAU,GACVC,WAAW,EACXC,WAAW,EACXC,aAAa,EACbC,UAAU,EACV5I,SACE,sBAAM9F,MAAM,sBAAZ,+CAMJ,EAAK2O,kBAAoB,EAAKA,kBAAkB5N,KAAvB,gBACzB,EAAKiN,WAAa,EAAKA,WAAWjN,KAAhB,gBAhBD,E,qDAmBnB,SAAkBgJ,GAChB,IAAM5B,EAAS4B,EAAM5B,OACfC,EAAwB,aAAhBD,EAAO7H,KAAsB6H,EAAOyG,QAAUzG,EAAOC,MAC7D1F,EAAOyF,EAAOzF,KACpBnB,KAAK6E,SAAL,eACG1D,EAAO0F,M,wBAIZ,WACEC,UAAUC,UAAUC,UAAUhH,KAAK3B,MAAMkG,Y,oBAG3C,WAAU,IAAD,OACP,OACE,sBAAK9F,MAAM,OAAX,UACE,sBAAKA,MAAM,cAAX,UACE,gEADF,4HAKA,sBAAKA,MAAM,MAAX,UACE,qBAAKA,MAAM,qCAAX,SACE,oBAAGA,MAAM,SAAT,+BAAqCuB,KAAK3B,MAAM0O,SAAhD,eAEF,qBAAKtO,MAAM,kCAAX,SACE,uBACEM,KAAK,QACLN,MAAM,aACN6O,IAAI,IACJC,IAAI,KACJvO,GAAG,WACH6H,MAAO7G,KAAK3B,MAAM0O,SAClBpG,SAAU3G,KAAKoN,kBACfjM,KAAK,kBAIX,uBAAM1C,MAAM,YAAZ,UACE,sBAAKA,MAAM,+BAAX,UACE,uBACEA,MAAM,mBACNM,KAAK,WACLC,GAAG,YACHqO,QAASrN,KAAK3B,MAAMkG,SAASiJ,UAC7B7G,SAAU3G,KAAKoN,kBACfjM,KAAK,gBAEP,uBAAO1C,MAAM,mBAAmBiI,IAAI,YAApC,uCAIF,sBAAKjI,MAAM,+BAAX,UACE,uBACEA,MAAM,mBACNM,KAAK,WACLC,GAAG,SACHqO,QAASrN,KAAK3B,MAAMkG,SAASoI,QAC7BhG,SAAU3G,KAAKoN,kBACfjM,KAAK,cAEP,uBAAO1C,MAAM,mBAAmBiI,IAAI,SAApC,6BAIF,sBAAKjI,MAAM,+BAAX,UACE,uBACEA,MAAM,mBACNM,KAAK,WACLC,GAAG,SACHqO,QAASrN,KAAK3B,MAAMkG,SAASqI,QAC7BjG,SAAU3G,KAAKoN,kBACfjM,KAAK,cAEP,uBAAO1C,MAAM,mBAAmBiI,IAAI,SAApC,4BAIF,sBAAKjI,MAAM,+BAAX,UACE,uBACEA,MAAM,mBACNM,KAAK,WACLC,GAAG,SACHqO,QAASrN,KAAK3B,MAAMkG,SAASsI,OAC7BlG,SAAU3G,KAAKoN,kBACfjM,KAAK,aAEP,uBAAO1C,MAAM,mBAAmBiI,IAAI,SAApC,qCAKJ,wBACE3H,KAAK,cACLN,MAAM,yCACNa,QAAS,kBACP,EAAKuF,SACH,CACEN,SAAUhG,EAAUmO,SAAS,CAC3BhK,OAAQ,EAAKrE,MAAM0O,SACnBJ,QAAS,EAAKtO,MAAM2O,UACpBJ,QAAS,EAAKvO,MAAM4O,UACpBJ,OAAQ,EAAKxO,MAAM8O,SACnBK,UAAW,EAAKnP,MAAM6O,eAG1B,EAAKT,aAdX,SAkBGzM,KAAK3B,MAAMkG,kB,GAlI2BhE,aCC5BkN,E,kDACnB,WAAYvP,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,CAAE0C,OAAQ,mBAFN,E,0CAKnB,WAAU,IAAD,OACH2M,EACoB,oBAAtB1N,KAAK3B,MAAM0C,OACT,cAAC,EAAD,IAEA,cAAC,EAAD,IAGJ,OACE,sBAAKtC,MAAM,kBAAX,UACE,qBAAKA,MAAM,MAAX,SACE,cAAC,EAAD,CAAQH,KAAK,oBAEf,sBAAKG,MAAM,WAAX,UACE,qBAAKA,MAAM,QAAX,SACE,sBAAKA,MAAM,aAAX,UACE,wBACEM,KAAK,SACLN,MAAM,yCACNa,QAAS,kBAAM,EAAKuF,SAAS,CAAE9D,OAAQ,qBAHzC,8BAOA,wBACEhC,KAAK,SACLN,MAAM,yCACNa,QAAS,kBAAM,EAAKuF,SAAS,CAAE9D,OAAQ,yBAHzC,4BAUJ,qBAAKtC,MAAM,QAAX,SAAoBiP,c,GAvCanN,aCFtBoN,E,4JACnB,WACE,OACE,qBAAKlP,MAAM,yBAAX,SACE,qBAAKA,MAAM,kEAAX,SACE,sBAAKA,MAAM,QAAX,UACE,qBAAKC,IAAKC,EAAMF,MAAM,qBACtB,2D,GAP8B8B,aCYpCqN,G,4JACJ,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWhE,IACjC,cAAC,IAAD,CAAO8D,KAAK,SAASE,UAAW1C,IAChC,cAAC,IAAD,CAAOwC,KAAK,YAAYE,UAAWzB,IACnC,cAAC,IAAD,CAAOuB,KAAK,QAAQE,UAAWjF,IAC/B,cAAC,IAAD,CAAO+E,KAAK,aAAaE,UAAWN,IACpC,cAAC,IAAD,CAAOI,KAAK,WAAWE,UAAW3F,IAClC,cAAC,IAAD,CAAOyF,KAAK,IAAIE,UAAWJ,a,GAXnBpN,aAkBlByN,IAAS7P,OAAO,cAAC,GAAD,IAAS8P,SAASC,eAAe,W","file":"static/js/main.a17ad3b9.chunk.js","sourcesContent":["import axios from \"axios\";\nrequire(\"dotenv\").config();\n\nexport default axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_HOST,\n  //\"http://localhost:3000/\",\n});\n","export default __webpack_public_path__ + \"static/media/logo.fbd08a8c.png\";","import React, { Component } from \"react\";\nimport logo from \"../../Assets/logo.png\";\nimport \"../../index.css\";\nimport axios from \"../../axios/axiosConfig\";\nimport { withRouter } from \"react-router-dom\";\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: props.page,\n      logoutHandler: props.logoutHandler,\n    };\n\n    this.logoutHandler = this.logoutHandler.bind(this);\n  }\n\n  async logoutHandler() {\n    const response = await axios({\n      method: \"post\",\n      url: \"/logout\",\n      data: {\n        cookie: localStorage.getItem(\"cookie\"),\n      },\n    });\n    if (response.data.Status === true) {\n      localStorage.clear();\n      this.props.history.push(\"/\");\n      this.props.history.go();\n    }\n  }\n\n  async componentDidMount() {\n    const response = await axios({\n      method: \"post\",\n      url: \"/validcookie\",\n      data: {\n        cookie: localStorage.getItem(\"cookie\"),\n        email: localStorage.getItem(\"email\"),\n      },\n    });\n    if (\n      !(\n        localStorage.getItem(\"cookie\") &&\n        localStorage.getItem(\"stretchedMasterKey\") &&\n        response.data.Status === true\n      )\n    ) {\n      localStorage.clear();\n      this.props.history.replace(\"/login\");\n    }\n  }\n\n  render = () => {\n    let home = this.state.page === \"HomePage\" ? \"nav-link active\" : \"nav-link\";\n    let generator =\n      this.state.page === \"GeneratorPage\" ? \"nav-link active\" : \"nav-link\";\n    let checker =\n      this.state.page === \"CheckerPage\" ? \"nav-link active\" : \"nav-link\";\n\n    return (\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div class=\"container-fluid\">\n          <div class=\"navbar-brand\">\n            <img\n              src={logo}\n              alt=\"\"\n              width=\"30\"\n              height=\"24\"\n              class=\"d-inline-block align-text-top\"\n            />\n            {\"  Shrine\"}\n          </div>\n          <button\n            class=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav\">\n              <li class=\"nav-item\">\n                <a class={home} aria-current=\"page\" href=\"/home\">\n                  Home\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a class={generator} href=\"/generator\">\n                  Generator\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a class={checker} href=\"/checker\">\n                  Password-Pwned?\n                </a>\n              </li>\n              <li class=\"nav-item dropdown\">\n                <a\n                  class=\"nav-link dropdown-toggle\"\n                  href=\"/#\"\n                  id=\"navbarDropdown\"\n                  role=\"button\"\n                  data-bs-toggle=\"dropdown\"\n                  aria-expanded=\"false\"\n                >\n                  Account\n                </a>\n                <ul class=\"dropdown-menu\">\n                  <li>\n                    <p class=\"dropdown-item\">\n                      {localStorage.getItem(\"email\") === null\n                        ? \"\"\n                        : localStorage.getItem(\"email\").split(\"@\")[0]}\n                    </p>\n                  </li>\n                  <li>\n                    <hr class=\"dropdown-divider\" />\n                  </li>\n                  <li>\n                    <button\n                      class=\"dropdown-item\"\n                      onClick={() => {\n                        this.logoutHandler();\n                      }}\n                    >\n                      Log out\n                    </button>\n                  </li>\n                </ul>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  };\n}\n\nexport default withRouter(NavBar);\n","import { encode, decode } from \"base64-arraybuffer\";\n\nconst IV_LENGTH = 12;\n\nconst encrypt = async (data, stretchedMasterKeyBits) => {\n  data = decode(btoa(unescape(encodeURIComponent(data))));\n  const stretchedMasterKey = await window.crypto.subtle.importKey(\n    \"raw\",\n    decode(stretchedMasterKeyBits),\n    { name: \"AES-GCM\" },\n    false,\n    [\"encrypt\"]\n  );\n  const iv = crypto.getRandomValues(new Uint8Array(IV_LENGTH));\n  const encryptedContent = await window.crypto.subtle.encrypt(\n    {\n      name: \"AES-GCM\",\n\n      //Don't re-use initialization vectors!\n      //Always generate a new iv every time your encrypt!\n      //Recommended to use 12 bytes length\n      iv: iv,\n\n      //Additional authentication data (optional)\n      //additionalData: ArrayBuffer,\n\n      //Tag length (optional)\n      tagLength: 128, //can be 32, 64, 96, 104, 112, 120 or 128 (default)\n    },\n    stretchedMasterKey, //from generateKey or importKey above\n    data //ArrayBuffer of data you want to encrypt\n  );\n  const encryptedBytes = new Uint8Array(encryptedContent);\n  const encryptedPackageBuffer = new Uint8Array([...iv, ...encryptedBytes]);\n  //returns an ArrayBuffer containing the encrypted data\n  return encode(encryptedPackageBuffer);\n};\n\nconst decrypt = async (encryptedData, stretchedMasterKeyBits) => {\n  const stretchedMasterKey = await window.crypto.subtle.importKey(\n    \"raw\",\n    decode(stretchedMasterKeyBits),\n    { name: \"AES-GCM\" },\n    false,\n    [\"decrypt\"]\n  );\n  const encryptedPackage = new Uint8Array(decode(encryptedData));\n  const iv = encryptedPackage.slice(0, IV_LENGTH);\n  const encryptedBytes = encryptedPackage.slice(IV_LENGTH);\n  const decrypted = await window.crypto.subtle.decrypt(\n    {\n      name: \"AES-GCM\",\n      iv: iv, //The initialization vector you used to encrypt\n      // additionalData: ArrayBuffer, //The addtionalData you used to encrypt (if any)\n      tagLength: 128, //The tagLength you used to encrypt (if any)\n    },\n    stretchedMasterKey, //from generateKey or importKey above\n    encryptedBytes //ArrayBuffer of the data\n  );\n  return decodeURIComponent(escape(atob(encode(decrypted))));\n};\n\nexport { encrypt, decrypt };\n","import base32Decode from \"base32-decode\";\n\n/*\n  https://github.com/google/google-authenticator/wiki/Key-Uri-Format\n  Assumptions (based from Google Authenticator):\n    Algorithm: SHA1\n    Digits: 6\n    Period: 30s\n*/\n\nconst computeHOTP = async (secret, counter) => {\n  secret = secret.toUpperCase().replace(/\\s/g, \"\");\n  const b32_regex = /^[A-Z2-7]*$/;\n  if (!(secret.length !== 0 && b32_regex.exec(secret))) return \"NaN\";\n  // https://tools.ietf.org/html/rfc4226#section-5.1\n  let formatCounter = (counter) => {\n    let binStr = (\"0\".repeat(64) + counter.toString(2)).slice(-64);\n    let intArr = [];\n\n    for (let i = 0; i < 8; i++) {\n      intArr[i] = parseInt(binStr.slice(i * 8, i * 8 + 8), 2);\n    }\n\n    return Uint8Array.from(intArr).buffer;\n  };\n\n  // https://tools.ietf.org/html/rfc4226#section-5.4\n  let truncate = (buffer) => {\n    let offset = buffer[buffer.length - 1] & 0xf;\n    return (\n      ((buffer[offset] & 0x7f) << 24) |\n      ((buffer[offset + 1] & 0xff) << 16) |\n      ((buffer[offset + 2] & 0xff) << 8) |\n      (buffer[offset + 3] & 0xff)\n    );\n  };\n\n  const resultKey = await crypto.subtle.importKey(\n    \"raw\",\n    base32Decode(secret, \"RFC4648\"),\n    { name: \"HMAC\", hash: { name: \"SHA-1\" } },\n    false,\n    [\"sign\"]\n  );\n  const result = await crypto.subtle.sign(\n    \"HMAC\",\n    resultKey,\n    formatCounter(counter)\n  );\n  return (\"000000\" + (truncate(new Uint8Array(result)) % 10 ** 6)).slice(-6);\n};\n\nconst computeTOTP = (secret) => {\n  const counter = Math.floor(Date.now() / 30000);\n  return computeHOTP(secret, counter);\n};\n\nexport { computeHOTP, computeTOTP };\n","import { Component } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport axios from \"../../axios/axiosConfig\";\n\nimport { encrypt, decrypt } from \"../../crypto/encryption\";\n\nimport { computeHOTP, computeTOTP } from \"../../twoFA/twoFA\";\n\nexport default class Passwords extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      entries: this.props.entries,\n      showInspectModal: false,\n      showEditModal: false,\n      entryInModal: {},\n      decryptedEntry: {},\n      remainingSeconds: 0,\n      refresh: this.props.refresh,\n      showPassword: false,\n    };\n    this.handleOpenInspectModal = this.handleOpenInspectModal.bind(this);\n    this.handleCloseInspectModal = this.handleCloseInspectModal.bind(this);\n\n    this.handleOpenEditModal = this.handleOpenEditModal.bind(this);\n    this.handleSaveAndCloseEditModal =\n      this.handleSaveAndCloseEditModal.bind(this);\n    this.handleCloseEditModal = this.handleCloseEditModal.bind(this);\n    this.handleShowPassword = this.handleShowPassword.bind(this);\n\n    this.countDown = this.countDown.bind(this);\n    this.timer = 0;\n  }\n\n  countDown() {\n    let remainingSeconds = this.state.remainingSeconds - 1;\n    remainingSeconds = Math.floor(\n      (Date.now() - Math.floor(Date.now() / 30000) * 30000) / 1000\n    );\n    this.setState({ remainingSeconds });\n    if (remainingSeconds === 0) {\n      this.handleUpdate2FA();\n      this.setState({ remainingSeconds: 30 });\n    }\n  }\n\n  handleOpenInspectModal = async (entry) => {\n    this.timer = setInterval(() => {\n      this.countDown();\n    }, 1000);\n\n    this.setState({\n      showInspectModal: true,\n\n      entryInModal: {\n        ...entry,\n        password: await decrypt(\n          entry.password,\n          localStorage.getItem(\"stretchedMasterKey\")\n        ),\n        twoFA: await computeTOTP(\n          await decrypt(entry.twoFA, localStorage.getItem(\"stretchedMasterKey\"))\n        ),\n      },\n      decryptedEntry: {\n        ...entry,\n        password: await decrypt(\n          entry.password,\n          localStorage.getItem(\"stretchedMasterKey\")\n        ),\n        twoFA: await decrypt(\n          entry.twoFA,\n          localStorage.getItem(\"stretchedMasterKey\")\n        ),\n      },\n      remainingSeconds: Math.floor(\n        (Date.now() - Math.floor(Date.now() / 30000) * 30000) / 1000\n      ),\n    });\n  };\n\n  handleCloseInspectModal = () => {\n    this.setState({ entryInModal: {} });\n    this.setState({ showInspectModal: false });\n    this.setState({ showPassword: false });\n    this.setState({ decryptedEntry: {} });\n    this.setState({ remainingSeconds: 0 });\n    clearInterval(this.timer);\n  };\n\n  handleShowPassword = (prevState) => {\n    this.setState({ showPassword: !this.state.showPassword });\n  };\n\n  handleUpdate2FA = async () => {\n    this.setState({\n      entryInModal: {\n        ...this.state.entryInModal,\n        twoFA: await computeTOTP(this.state.decryptedEntry.twoFA),\n      },\n    });\n  };\n\n  handleOpenEditModal = async (entry) => {\n    this.setState({\n      showEditModal: true,\n\n      entryInModal: {\n        ...entry,\n        password:\n          \"password\" in entry\n            ? await decrypt(\n                entry.password,\n                localStorage.getItem(\"stretchedMasterKey\")\n              )\n            : \"\",\n        twoFA:\n          \"twoFA\" in entry\n            ? await decrypt(\n                entry.twoFA,\n                localStorage.getItem(\"stretchedMasterKey\")\n              )\n            : \"\",\n      },\n    });\n  };\n\n  handleSaveAndCloseEditModal = async () => {\n    let response = null;\n    const data = {\n      cookie: localStorage.getItem(\"cookie\"),\n      boxid: this.state.entryInModal.boxid,\n      boxname: this.state.entryInModal.boxname,\n      twoFA: await encrypt(\n        this.state.entryInModal.twoFA,\n        localStorage.getItem(\"stretchedMasterKey\")\n      ),\n      username: this.state.entryInModal.username,\n      url: this.state.entryInModal.url,\n      password: await encrypt(\n        this.state.entryInModal.password,\n        localStorage.getItem(\"stretchedMasterKey\")\n      ),\n    };\n    if (\n      this.props.entries\n        .map((entry) => entry.boxid)\n        .includes(this.state.entryInModal.boxid)\n    ) {\n      // then this should be edit\n      response = await axios({\n        method: \"post\",\n        url: \"/changebox\",\n        data: data,\n      });\n    } else {\n      // then this should be add\n      response = await axios({\n        method: \"post\",\n        url: \"/addbox\",\n        data: data,\n      });\n    }\n    if (response.data.Status === true) {\n      this.state.refresh();\n    }\n    this.setState({ entryInModal: {} });\n    this.setState({ showEditModal: false });\n    this.setState({ showPassword: false });\n  };\n\n  handleCloseEditModal = () => {\n    this.setState({ entryInModal: {} });\n    this.setState({ showEditModal: false });\n    this.setState({ showPassword: false });\n  };\n\n  handleDelete = async (boxid) => {\n    const response = await axios({\n      method: \"post\",\n      url: \"/deletebox\",\n      data: {\n        cookie: localStorage.getItem(\"cookie\"),\n        boxid: boxid,\n      },\n    });\n    if (response.data.Status === true) this.state.refresh();\n  };\n\n  render = () => {\n    return (\n      <div class=\"container-fluid\">\n        <div class=\"d-grid\">\n          <button\n            class=\"btn btn-primary mt-1\"\n            onClick={async () => {\n              const entry = {};\n              entry.boxid = uuidv4();\n              await this.handleOpenEditModal(entry);\n            }}\n          >\n            Add a new Password\n          </button>\n        </div>\n        <ol class=\"list-group list-group-numbered mt-3\">\n          {this.state.entries.map((entry) => {\n            return (\n              <div class=\"card border-grey mb-2\">\n                <div class=\"row d-flex align-items-center\">\n                  <div class=\"col-xxl-2 col-xl-3 col-lg-4\">\n                    <div class=\"btn-group\" role=\"group\">\n                      <button\n                        class=\"btn btn-secondary\"\n                        onClick={async () => {\n                          await this.handleOpenInspectModal(entry);\n                        }}\n                      >\n                        Inspect\n                      </button>\n                      <button\n                        class=\"btn btn-outline-primary\"\n                        onClick={() => {\n                          this.handleOpenEditModal(entry);\n                        }}\n                      >\n                        Change\n                      </button>\n                    </div>\n                  </div>\n                  <div class=\"col-xxl-10 col-xl-9 col-lg-8\">\n                    <div class=\"row\">\n                      <div class=\"col-10\">\n                        <div class=\"row\">\n                          <div class=\"col-5\">\n                            <div class=\"fw-bold\">{entry.boxname}</div>\n                          </div>\n                          <div class=\"col-5\">{entry.url}</div>\n                        </div>\n                      </div>\n                      <div class=\"col-2\">\n                        <button\n                          type=\"button\"\n                          class=\"btn btn-outline-danger\"\n                          onClick={() => {\n                            this.handleDelete(entry.boxid);\n                          }}\n                        >\n                          Delete\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </ol>\n        <Modal\n          show={this.state.showEditModal}\n          onHide={this.handleCloseEditModal}\n        >\n          <Modal.Header>\n            <Modal.Title>Edit a box</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n              }}\n            >\n              <div class=\"form-group\">\n                <label for=\"recipient-name\" class=\"col-form-label\">\n                  Website Name\n                </label>\n                <div class=\"input-group mb-3\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"recipient-name\"\n                    onChange={(e) => {\n                      this.setState({\n                        entryInModal: {\n                          ...this.state.entryInModal,\n                          boxname: e.target.value,\n                        },\n                      });\n                    }}\n                    value={this.state.entryInModal.boxname}\n                  ></input>\n                  <button\n                    class=\"btn btn-outline-primary\"\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        this.state.entryInModal.boxname\n                      );\n                    }}\n                  >\n                    Copy\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"recipient-name\" class=\"col-form-label\">\n                  URL\n                </label>\n                <div class=\"input-group mb-3\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"recipient-name\"\n                    onChange={(e) => {\n                      this.setState({\n                        entryInModal: {\n                          ...this.state.entryInModal,\n                          url: e.target.value,\n                        },\n                      });\n                    }}\n                    value={this.state.entryInModal.url}\n                  ></input>\n                  <button\n                    class=\"btn btn-outline-primary\"\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        this.state.entryInModal.url\n                      );\n                    }}\n                  >\n                    Copy\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"recipient-name\" class=\"col-form-label\">\n                  Username\n                </label>\n                <div class=\"input-group mb-3\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"recipient-name\"\n                    onChange={(e) => {\n                      this.setState({\n                        entryInModal: {\n                          ...this.state.entryInModal,\n                          username: e.target.value,\n                        },\n                      });\n                    }}\n                    value={this.state.entryInModal.username}\n                  ></input>\n                  <button\n                    class=\"btn btn-outline-primary\"\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        this.state.entryInModal.username\n                      );\n                    }}\n                  >\n                    Copy\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"recipient-name\" class=\"col-form-label\">\n                  Password\n                </label>\n                <div class=\"input-group mb-3\">\n                  <input\n                    type={this.state.showPassword ? \"text\" : \"password\"}\n                    class=\"form-control\"\n                    id=\"recipient-name\"\n                    onChange={(e) => {\n                      this.setState({\n                        entryInModal: {\n                          ...this.state.entryInModal,\n                          password: e.target.value,\n                        },\n                      });\n                    }}\n                    value={this.state.entryInModal.password}\n                    onClick={this.handleShowPassword}\n                  ></input>\n                  <button\n                    class=\"btn btn-outline-primary\"\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        this.state.entryInModal.password\n                      );\n                    }}\n                  >\n                    Copy\n                  </button>\n                </div>\n                <div class=\"form-text\">\n                  {\"Click on password to \" +\n                    (this.state.showPassword ? \"hide\" : \"show\") +\n                    \" password\"}\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"recipient-name\" class=\"col-form-label\">\n                  Two-Factor Authorization Code\n                </label>\n                <div class=\"input-group mb-3\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"recipient-name\"\n                    onChange={(e) => {\n                      this.setState({\n                        entryInModal: {\n                          ...this.state.entryInModal,\n                          twoFA: e.target.value,\n                        },\n                      });\n                    }}\n                    value={this.state.entryInModal.twoFA}\n                  ></input>\n                  <button\n                    class=\"btn btn-outline-primary\"\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        this.state.entryInModal.twoFA\n                      );\n                    }}\n                  >\n                    Copy\n                  </button>\n                </div>\n              </div>\n            </form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleCloseEditModal}>\n              Close\n            </Button>\n            <Button\n              variant=\"primary\"\n              onClick={this.handleSaveAndCloseEditModal}\n            >\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Modal\n          show={this.state.showInspectModal}\n          onHide={this.handleCloseInspectModal}\n        >\n          <Modal.Header>\n            <Modal.Title>Inspect a box</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n              }}\n            >\n              <div class=\"form-group\">\n                <label for=\"recipient-name\" class=\"col-form-label\">\n                  Name\n                </label>\n                <div class=\"input-group mb-3\">\n                  <input\n                    readOnly\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"recipient-name\"\n                    value={this.state.entryInModal.boxname}\n                  ></input>\n                  <button\n                    class=\"btn btn-outline-primary\"\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        this.state.entryInModal.boxname\n                      );\n                    }}\n                  >\n                    Copy\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"recipient-name\" class=\"col-form-label\">\n                  URL\n                </label>\n                <div class=\"input-group mb-3\">\n                  <input\n                    readOnly\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"recipient-name\"\n                    value={this.state.entryInModal.url}\n                  ></input>\n                  <button\n                    class=\"btn btn-outline-primary\"\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        this.state.entryInModal.url\n                      );\n                    }}\n                  >\n                    Copy\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"recipient-name\" class=\"col-form-label\">\n                  Username\n                </label>\n                <div class=\"input-group mb-3\">\n                  <input\n                    readOnly\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"recipient-name\"\n                    value={this.state.entryInModal.username}\n                  ></input>\n                  <button\n                    class=\"btn btn-outline-primary\"\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        this.state.entryInModal.username\n                      );\n                    }}\n                  >\n                    Copy\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"recipient-name\" class=\"col-form-label\">\n                  Password\n                </label>\n                <div class=\"input-group mb-3\">\n                  <input\n                    readOnly\n                    type={this.state.showPassword ? \"text\" : \"password\"}\n                    class=\"form-control\"\n                    id=\"recipient-name\"\n                    value={this.state.entryInModal.password}\n                    onClick={this.handleShowPassword}\n                  ></input>\n                  <button\n                    class=\"btn btn-outline-primary\"\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        this.state.entryInModal.password\n                      );\n                    }}\n                  >\n                    Copy\n                  </button>\n                </div>\n                <div class=\"form-text\">\n                  {\"Click on password to \" +\n                    (this.state.showPassword ? \"hide\" : \"show\") +\n                    \" password\"}\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"recipient-name\" class=\"col-form-label\">\n                  2FA\n                </label>\n                <div class=\"input-group mb-3\">\n                  <input\n                    readOnly\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"recipient-name\"\n                    value={\n                      this.state.entryInModal.twoFA +\n                      \" (refresh in \" +\n                      (30 -\n                        Math.floor(\n                          (Date.now() -\n                            Math.floor(Date.now() / 30000) * 30000) /\n                            1000\n                        )) +\n                      \" seconds)\"\n                    }\n                    onClick={this.handleUpdate2FA}\n                  ></input>\n                  <button\n                    class=\"btn btn-outline-primary\"\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        this.state.entryInModal.twoFA\n                      );\n                    }}\n                  >\n                    Copy\n                  </button>\n                </div>\n              </div>\n            </form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleCloseInspectModal}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  };\n}\n","import { Component } from \"react\";\nimport NavBar from \"./Components/NavBar\";\nimport { decrypt } from \"../crypto/encryption\";\nimport axios from \"../axios/axiosConfig\";\nconst sha1 = require(\"js-sha1\");\n\nvar pwnd_dict = {};\n\nasync function getBreach() {\n  const response = await axios({\n    method: \"post\",\n    url: \"/basicrequest\",\n    data: {\n      cookie: localStorage.getItem(\"cookie\"),\n    },\n  });\n\n  for (const item of response.data) {\n    await checkBreach(item);\n  }\n\n  async function checkBreach(item) {\n    if (\"password\" in item) {\n      const decryptedPassword = await decrypt(\n        item.password,\n        localStorage.getItem(\"stretchedMasterKey\")\n      );\n      const digest = sha1(decryptedPassword).toUpperCase();\n\n      const digestFront = digest.slice(0, 5);\n      const digestEnd = digest.slice(-35);\n      const res = await axios.get(\n        \"https://api.pwnedpasswords.com/range/\" + digestFront\n      );\n\n      let pwnd_list = res.data.split(\"\\r\\n\");\n\n      pwnd_list.forEach(createDictionary);\n\n      function createDictionary(i) {\n        const pwnd_pair = i.split(\":\");\n        if (pwnd_pair[0] === digestEnd) {\n          pwnd_dict[item.boxname] = pwnd_pair[1];\n        }\n      }\n    }\n  }\n\n  const breaches = Object.keys(pwnd_dict).length;\n}\n\nexport default class CheckerPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0, //# of boxes we found has breached\n      pressed: false, //did we start to check yet?\n      breached: pwnd_dict, //the list of boxnames and how many time it has been breached\n    };\n\n    this.Change = this.Change.bind(this);\n  }\n\n  Change(event) {\n    getBreach().then(() => {\n      this.setState({\n        value: Object.keys(pwnd_dict).length,\n        pressed: true,\n        breached: pwnd_dict,\n      });\n    });\n  }\n\n  render() {\n    let p; //text for showing if have any boxes that is breached, if there is display the number of it\n    let o = []; //text for shwoing the boxname and how many times it is found.\n    let q; //text explain what you should do, what does this check mean\n    if (this.state.pressed) {\n      //[1] make the output look nicer\n      if (this.state.value !== 0) {\n        p = (\n          <h6 class=\"text-danger\">\n            {\"WARNING: Total \" + this.state.value + \" breaches\"}\n          </h6>\n        );\n        for (var i = 0; i < this.state.value; i++) {\n          o.push(\n            <span class=\"list-group-item\" key={\"b\" + i}>\n              {'In the box \"' +\n                Object.keys(this.state.breached)[i] +\n                '\": password has been seen ' +\n                Object.values(this.state.breached)[i] +\n                \" times before.\"}\n            </span>\n          );\n        }\n      } else {\n        p = (\n          <h6 class=\"text-success\">\n            {\"There are no password breaches. You are good to go.\"}\n          </h6>\n        );\n      }\n    }\n\n    return (\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <NavBar page=\"CheckerPage\" />\n        </div>\n        <div class=\"row mt-3\">\n          <div class=\"col-3\">\n            <div class=\"list-group\">\n              <button\n                type=\"button\"\n                class=\"list-group-item list-group-item-action\"\n                onClick={this.Change}\n              >\n                Check vulnerabilities\n              </button>\n              <p class=\"m-2\">\n                <em>\n                  A vulnerability indicates that a password has previously\n                  appeared in a data breach and should never be used. If a\n                  vulnerability happens, please change password{\" \"}\n                  <strong> immediately</strong>.\n                </em>\n              </p>\n            </div>\n          </div>\n          <div class=\"col-9\">\n            <div class=\"card\">\n              <div class=\"card-header fw-bold\">{p}</div>\n              {o}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { useEffect, useState } from \"react\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport axios from \"../axios/axiosConfig\";\nimport NavBar from \"./Components/NavBar\";\nimport Passwords from \"./Components/Passwords\";\nimport Checker from \"./CheckerPage\";\n\nconst HomePage = () => {\n  const history = useHistory();\n  const [boxes, setBoxes] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [textInput, setTextInput] = useState(\"\");\n  const [forceUpdate, setForceUpdate] = useState(0);\n\n  const retrieveBoxesIndex = async () => {\n    const response = await axios({\n      method: \"post\",\n      url: \"/basicrequest\",\n      data: {\n        cookie: localStorage.getItem(\"cookie\"),\n      },\n    });\n    setBoxes(response.data);\n  };\n\n  const searchHandler = async (boxes) => {\n    const results = [];\n\n    if (textInput.length === 0) {\n      setSearchResults(boxes);\n    } else {\n      for (const box of boxes) {\n        if (\n          (\"boxname\" in box && box.boxname.includes(textInput)) ||\n          (\"username\" in box && box.username.includes(textInput)) ||\n          (\"url\" in box && box.url.includes(textInput))\n        ) {\n          results.push(box);\n        }\n      }\n      setSearchResults(results);\n    }\n    setForceUpdate(forceUpdate + 1);\n  };\n\n  const initiateSearch = (e) => {\n    setTextInput(e.target.value);\n  };\n\n  useEffect(() => {\n    searchHandler(boxes);\n  }, [boxes]);\n\n  useEffect(() => {\n    retrieveBoxesIndex();\n  }, [textInput]);\n\n  useEffect(() => {\n    retrieveBoxesIndex();\n  }, [history]);\n\n  return (\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <NavBar page=\"HomePage\" />\n      </div>\n      <div class=\"row mt-3\">\n        <div class=\"col-3\">\n          <div class=\"card border-grey\">\n            <h3 class=\"m-2 p-1\">Welcome to Shrine!</h3>\n          </div>\n          <div class=\"list-group m-1\">\n            <form class=\"d-flex mt-2\">\n              <input\n                class=\"form-control me-2\"\n                type=\"search\"\n                placeholder=\"Search\"\n                value={textInput}\n                onChange={initiateSearch}\n              />\n              <button class=\"btn btn-outline-success\" type=\"submit\">\n                Search\n              </button>\n            </form>\n          </div>\n          <p class=\"m-2\">\n            <em>\n              <small>\n                Search your shrine with <strong>website name</strong>. The\n                result will be shown in real time. You can\n                <strong> copy</strong> an entry inside inspection window.{\" \"}\n              </small>\n            </em>\n          </p>\n        </div>\n        <div class=\"col-9\">\n          <Passwords\n            entries={searchResults}\n            refresh={retrieveBoxesIndex}\n            key={forceUpdate}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import { useHistory } from \"react-router-dom\";\n\nimport logo from \"../Assets/logo.png\";\n\nfunction MainPage() {\n  const history = useHistory();\n  return (\n    <div class=\"container-fluid vh-100\">\n      <div class=\"row justify-content-center h-100 align-items-center\">\n        <div class=\"col-3\">\n          <img src={logo} class=\"img-fluid d-flex\" alt=\"Responsive\" />\n        </div>\n        <div class=\"col-3 text-center\">\n          <h1 class=\"display-1\">Shrine</h1>\n          <p class=\"h6\">Password Manager</p>\n          <figure class=\"text-center\">\n            <blockquote class=\"blockquote\">\n              <p>\"Use at your own risk.\"</p>\n            </blockquote>\n            <figcaption class=\"blockquote-footer\">\n              <cite title=\"Source Title\">Hanry Xu</cite>\n            </figcaption>\n          </figure>\n          <div class=\"btn-group\" role=\"group\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-primary\"\n              onClick={() => {\n                history.push(\"/login\");\n                history.go();\n              }}\n            >\n              Log In\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-primary\"\n              onClick={() => {\n                history.push(\"/register\");\n                history.go();\n              }}\n            >\n              Sign Up\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n","import { encode, decode } from \"base64-arraybuffer\";\n\nexport const genCredential = async (email, password) => {\n  const encoder = new TextEncoder();\n  const password_byte = encoder.encode(password); // emit a stream of UTF-8 bytes Uint8Array\n  const salt_byte = encoder.encode(email);\n  const password_key = await crypto.subtle.importKey(\n    \"raw\",\n    password_byte,\n    \"PBKDF2\",\n    false,\n    [\"deriveKey\"]\n  );\n\n  const masterKey = await crypto.subtle.deriveKey(\n    {\n      name: \"PBKDF2\",\n      hash: \"SHA-256\",\n      salt: salt_byte,\n      iterations: 100000,\n    },\n    password_key,\n    {\n      name: \"AES-GCM\",\n      length: 256,\n    },\n    true,\n    [\"encrypt\", \"decrypt\"]\n  );\n  const masterKey_bytes = await crypto.subtle.exportKey(\"raw\", masterKey);\n  const masterKey_for_stretch = await crypto.subtle.importKey(\n    \"raw\",\n    masterKey_bytes,\n    {\n      name: \"HKDF\",\n    },\n    false,\n    [\"deriveBits\"]\n  );\n  const masterKey_for_hash = await crypto.subtle.importKey(\n    \"raw\",\n    masterKey_bytes,\n    {\n      name: \"PBKDF2\",\n    },\n    false,\n    [\"deriveBits\"]\n  );\n  const stretchedMasterKey = crypto.subtle\n    .deriveBits(\n      {\n        name: \"HKDF\",\n        hash: \"SHA-256\",\n        salt: salt_byte,\n        info: encoder.encode(\"stretch\"),\n      },\n      masterKey_for_stretch,\n      256,\n      false\n    )\n    .then((stretched_key) => {\n      return encode(stretched_key);\n    });\n  const masterPasswordHash = crypto.subtle\n    .deriveBits(\n      {\n        name: \"PBKDF2\",\n        salt: password_byte,\n        iterations: 1,\n        hash: { name: \"SHA-256\" }, //can be \"SHA-1\", \"SHA-256\", \"SHA-384\", or \"SHA-512\"\n      },\n      masterKey_for_hash,\n      256\n    )\n    .then((hash) => {\n      return encode(hash);\n    });\n  return Promise.all([stretchedMasterKey, masterPasswordHash]);\n};\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport logo from \"./../Assets/logo.png\";\nimport { genCredential } from \"../crypto/credential\";\n\nimport axios from \"../axios/axiosConfig\";\n\nfunction LoginPage() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const [showPassword, setShowPassword] = useState(false);\n\n  async function loginUser(event) {\n    event.preventDefault();\n    const credential = await genCredential(email, password);\n    const stretchedMasterKey = credential[0];\n    const mph = credential[1];\n    const response = await axios({\n      method: \"post\",\n      url: \"/login\",\n      data: {\n        Email: email,\n        mph: mph,\n      },\n    });\n\n    const resData = response.data; //all the response data\n    const resStatus = Boolean(resData.Status); //response status\n    const resCookie = resData.cookie; //response cookie\n    localStorage.setItem(\"cookie\", resCookie);\n    localStorage.setItem(\"stretchedMasterKey\", stretchedMasterKey);\n    localStorage.setItem(\"email\", email);\n    if (resStatus) {\n      window.location.href = \"/home\";\n      setShowPassword(false);\n    } else {\n      setPassword(\"\");\n      setShowPassword(false);\n      alert(\"Please check your username and password\");\n    }\n  }\n\n  const handleShowPassword = (e) => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <div class=\"container-fluid vh-100\">\n      <div class=\"row justify-content-center align-items-center h-100\">\n        <div class=\"col-3\">\n          <img src={logo} alt=\"logo\" class=\"img-fluid d-flex\" />\n        </div>\n        <div class=\"col-3 mx-3\">\n          <h1>Log In</h1>\n          <div class=\"row mt-3\">\n            <form\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  loginUser(event);\n                }\n              }}\n              onSubmit={(e) => {\n                e.preventDefault();\n              }}\n            >\n              <div class=\"mb-3\">\n                <label for=\"exampleInputEmail1\" class=\"form-label\">\n                  Email\n                </label>\n                <input\n                  type=\"email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  class=\"form-control\"\n                  id=\"exampleInputEmail1\"\n                  aria-describedby=\"emailHelp\"\n                />\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"exampleInputPassword1\" class=\"form-label\">\n                  Password\n                </label>\n                <div class=\"input-group mb-3\">\n                  <input\n                    type={showPassword ? \"text\" : \"password\"}\n                    onChange={(e) => setPassword(e.target.value)}\n                    class=\"form-control\"\n                    id=\"exampleInputPassword1\"\n                    value={password}\n                  />\n                  <button\n                    class=\"btn btn-outline-primary\"\n                    onClick={handleShowPassword}\n                  >\n                    {showPassword ? \"hide\" : \"show\"}\n                  </button>\n                </div>\n              </div>\n              <div\n                class=\"btn-group\"\n                role=\"group\"\n                aria-label=\"Basic outlined example\"\n              >\n                <button\n                  type=\"botton\"\n                  class=\"btn btn-outline-primary\"\n                  onClick={loginUser}\n                >\n                  Log In\n                </button>\n              </div>\n            </form>\n          </div>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary\"\n            onClick={() => {\n              history.push(\"/register\");\n              history.go();\n              setShowPassword(false);\n            }}\n          >\n            Not Registered? Sign Up\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary\"\n            onClick={() => {\n              history.push(\"/\");\n              history.go();\n            }}\n          >\n            About\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginPage;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"../axios/axiosConfig\";\n\nimport logo from \"./../Assets/logo.png\";\nimport { genCredential } from \"../crypto/credential\";\n\nfunction RegisterPage() {\n  const history = useHistory();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n\n  async function registerUser(event) {\n    event.preventDefault();\n    if (email === \"\" || password === \"\") {\n      setPassword(\"\");\n      setShowPassword(false);\n      alert(\"Please enter your email and password\");\n      return;\n    }\n    const credential = await genCredential(email, password);\n    const stretchedMasterKey = credential[0];\n    const mph = credential[1];\n    const response = await axios({\n      method: \"post\",\n      url: \"/register\",\n      data: {\n        Email: email,\n        mph: mph,\n      },\n    });\n\n    const resData = response.data;\n    const resStatus = Boolean(resData.Status);\n\n    if (resStatus) {\n      history.push(\"/login\");\n      setShowPassword(false);\n    } else {\n      setPassword(\"\");\n      setShowPassword(false);\n      alert(\"User already exist.\");\n    }\n  }\n\n  const handleShowPassword = (e) => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <div class=\"container-fluid vh-100\">\n      <div class=\"row justify-content-center h-100 align-items-center\">\n        <div class=\"col-4\">\n          <div class=\"row justify-content-center\">\n            <img src={logo} class=\"h-25 w-25\" />\n          </div>\n          <form\n            onKeyPress={(e) => {\n              if (e.key === \"Enter\") {\n                registerUser(e);\n              }\n            }}\n            onSubmit={(e) => {\n              e.preventDefault();\n            }}\n          >\n            <div class=\"mb-3\">\n              <label for=\"exampleInputEmail1\" class=\"form-label\">\n                Email\n              </label>\n              <input\n                type=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n                class=\"form-control\"\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n              />\n              <div id=\"emailHelp\" class=\"form-text\">\n                We won't share the information with anyone.\n              </div>\n            </div>\n            <div class=\"mb-3\">\n              <label class=\"form-label\">Password</label>\n              <div class=\"input-group mb-3\">\n                <input\n                  type={showPassword ? \"text\" : \"password\"}\n                  onChange={(e) => setPassword(e.target.value)}\n                  class=\"form-control\"\n                  id=\"exampleInputPassword1\"\n                  value={password}\n                />\n                <button\n                  class=\"btn btn-outline-primary\"\n                  onClick={handleShowPassword}\n                >\n                  {showPassword ? \"hide\" : \"show\"}\n                </button>\n              </div>\n            </div>\n\n            <div class=\"justify-content-between d-flex\">\n              <div class=\"btn-group\" role=\"group\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-primary\"\n                  onClick={() => {\n                    history.push(\"/login\");\n                    history.go();\n                  }}\n                >\n                  Registered? Log In\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-primary\"\n                  onClick={() => {\n                    history.push(\"/\");\n                    history.go();\n                    setShowPassword(false);\n                  }}\n                >\n                  About\n                </button>\n              </div>\n              <button\n                type=\"botton\"\n                class=\"btn btn-outline-primary\"\n                onClick={registerUser}\n              >\n                Sign Up\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RegisterPage;\n","import { Component } from \"react\";\n\nconst generator = require(\"generate-password\");\n\nexport default class QuickGeneration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: (\n        <span class=\"text-success\"> Click here to generate and copy.</span>\n      ),\n    };\n    this.handleCopy = this.handleCopy.bind(this);\n  }\n\n  handleCopy() {\n    navigator.clipboard.writeText(this.state.password);\n  }\n\n  render() {\n    return (\n      <div class=\"card\">\n        <div class=\"card-boy\">\n          <div class=\"card-header\">\n            <h6>\n              Generate a common 8-digit, mathematically proven safe password\n              with just one click.{\" \"}\n            </h6>\n            Start by clicking the area below.\n          </div>\n          <button\n            type=\"button card\"\n            class=\"list-group-item list-group-item-action\"\n            onClick={() =>\n              this.setState(\n                {\n                  password: generator.generate({\n                    length: 8,\n                    numbers: true,\n                    symbols: true,\n                    strict: true,\n                  }),\n                },\n                this.handleCopy\n              )\n            }\n          >\n            <div class=\"card-body\">\n              <h6 class=\"card-subtitle mb-2 text-muted\">\n                {this.state.password}\n              </h6>\n            </div>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\n\nconst generator = require(\"generate-password\");\n\nexport default class CustomizeGeneration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      p_length: 10,\n      p_numbers: false,\n      p_symbols: false,\n      p_uppercase: false,\n      p_strict: false,\n      password: (\n        <span class=\"text-success inline\">\n          Click here to generate and copy.\n        </span>\n      ),\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleCopy = this.handleCopy.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleCopy() {\n    navigator.clipboard.writeText(this.state.password);\n  }\n\n  render() {\n    return (\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h6>Customize password generation.</h6>\n          Please specify password length and other requirements, then click the\n          area below to start and copy generated password.\n        </div>\n        <div class=\"row\">\n          <div class=\"col-3 mt-2 ms-3 align-items-center\">\n            <p class=\"d-flex\"> Password length: {this.state.p_length} digits</p>\n          </div>\n          <div class=\"col-3 d-flex align-items-center\">\n            <input\n              type=\"range\"\n              class=\"form-range\"\n              min=\"4\"\n              max=\"18\"\n              id=\"p_length\"\n              value={this.state.p_length}\n              onChange={this.handleInputChange}\n              name=\"p_length\"\n            />\n          </div>\n        </div>\n        <form class=\"mx-3 mb-2\">\n          <div class=\"form-check form-check-inline\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"uppercase\"\n              checked={this.state.password.uppercase}\n              onChange={this.handleInputChange}\n              name=\"p_uppercase\"\n            />\n            <label class=\"form-check-label\" for=\"uppercase\">\n              With uppercase letters\n            </label>\n          </div>\n          <div class=\"form-check form-check-inline\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"number\"\n              checked={this.state.password.numbers}\n              onChange={this.handleInputChange}\n              name=\"p_numbers\"\n            />\n            <label class=\"form-check-label\" for=\"number\">\n              With Numbers\n            </label>\n          </div>\n          <div class=\"form-check form-check-inline\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"symbol\"\n              checked={this.state.password.symbols}\n              onChange={this.handleInputChange}\n              name=\"p_symbols\"\n            />\n            <label class=\"form-check-label\" for=\"symbol\">\n              With Symbol\n            </label>\n          </div>\n          <div class=\"form-check form-check-inline\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"strict\"\n              checked={this.state.password.strict}\n              onChange={this.handleInputChange}\n              name=\"p_strict\"\n            />\n            <label class=\"form-check-label\" for=\"strict\">\n              Use strict method\n            </label>\n          </div>\n        </form>\n        <button\n          type=\"button card\"\n          class=\"list-group-item list-group-item-action\"\n          onClick={() =>\n            this.setState(\n              {\n                password: generator.generate({\n                  length: this.state.p_length,\n                  numbers: this.state.p_numbers,\n                  symbols: this.state.p_symbols,\n                  strict: this.state.p_strict,\n                  uppercase: this.state.p_uppercase,\n                }),\n              },\n              this.handleCopy\n            )\n          }\n        >\n          {this.state.password}\n        </button>\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport NavBar from \"./Components/NavBar\";\nimport QuickGeneration from \"./Components/QuickGeneration\";\nimport CustomizeGeneration from \"./Components/CustomizeGeneration\";\n\nexport default class GeneratorPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { window: \"QuickGeneration\" };\n  }\n\n  render() {\n    let generatorContent =\n      this.state.window === \"QuickGeneration\" ? (\n        <QuickGeneration />\n      ) : (\n        <CustomizeGeneration />\n      );\n\n    return (\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <NavBar page=\"GeneratorPage\" />\n        </div>\n        <div class=\"row mt-3\">\n          <div class=\"col-3\">\n            <div class=\"list-group\">\n              <button\n                type=\"button\"\n                class=\"list-group-item list-group-item-action\"\n                onClick={() => this.setState({ window: \"QuickGeneration\" })}\n              >\n                Quick Generation\n              </button>\n              <button\n                type=\"button\"\n                class=\"list-group-item list-group-item-action\"\n                onClick={() => this.setState({ window: \"CustomizeGeneration\" })}\n              >\n                Customize\n              </button>\n            </div>\n          </div>\n\n          <div class=\"col-9\">{generatorContent}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport logo from \"./../Assets/logo.png\";\n\nexport default class NotFoundPage extends Component {\n  render() {\n    return (\n      <div class=\"container-fluid vh-100\">\n        <div class=\"row h-100 align-items-center justify-content-center text-center\">\n          <div class=\"col-4\">\n            <img src={logo} class=\"img-fluid d-flex\" />\n            <h2>Page not found</h2>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport ReactDom from \"react-dom\";\n\nimport \"bootstrap/dist/js/bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport HomePage from \"./Pages/HomePage\";\nimport MainPage from \"./Pages/MainPage\";\nimport LoginPage from \"./Pages/LoginPage\";\nimport RegisterPage from \"./Pages/RegisterPage\";\nimport GeneratorPage from \"./Pages/GeneratorPage\";\nimport NotFoundPage from \"./Pages/NotFoundPage\";\nimport CheckerPage from \"./Pages/CheckerPage\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact component={MainPage} />\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/register\" component={RegisterPage} />\n          <Route path=\"/home\" component={HomePage} />\n          <Route path=\"/generator\" component={GeneratorPage} />\n          <Route path=\"/checker\" component={CheckerPage} />\n          <Route path=\"*\" component={NotFoundPage} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}